spring.datasource.url=jdbc:postgresql://localhost:5432/postgres?currentSchema=carrental
spring.datasource.username=postgres
spring.datasource.password=root

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=none

logging.level.liquibase = INFO
spring.liquibase.enabled=true
spring.liquibase.default-schema=carrental
spring.liquibase.url=jdbc:postgresql://localhost:5432/postgres
spring.liquibase.user=postgres
spring.liquibase.password=root
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

















# Whether to check that the change log location exists.
#spring.liquibase.check-change-log-location=true

#spring.liquibase.contexts= # Comma-separated list of runtime contexts to use.
#spring.liquibase.database-change-log-lock-table=DATABASECHANGELOGLOCK # Name of table to use for tracking concurrent Liquibase usage.
#spring.liquibase.database-change-log-table=DATABASECHANGELOG # Name of table to use for tracking change history.

#spring.liquibase.drop-first=false # Whether to first drop the database schema.
#spring.liquibase.labels= # Comma-separated list of runtime labels to use.
#spring.liquibase.liquibase-schema= # Schema to use for Liquibase objects.
#spring.liquibase.liquibase-tablespace= # Tablespace to use for Liquibase objects.
#spring.liquibase.parameters.*= # Change log parameters.

#spring.liquibase.rollback-file= # File to which rollback SQL is written when an update is performed.
#spring.liquibase.test-rollback-on-update=false # Whether rollback should be tested before update is performed.
#spring.liquibase.url= # JDBC URL of the database to migrate. If not set, the primary configured data source is used.
#spring.liquibase.user= # Login user of the database to migrate.